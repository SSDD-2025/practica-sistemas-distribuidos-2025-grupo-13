openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8443
  description: Generated server url
paths:
  /api/tickets/{id}:
    get:
      tags:
      - ticket-rest-controller
      operationId: getAllTickets
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TicketDTO"
    put:
      tags:
      - ticket-rest-controller
      operationId: replaceTicket
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TicketDTO"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TicketDTO"
    delete:
      tags:
      - ticket-rest-controller
      operationId: deleteTicket
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TicketDTO"
  /api/events/{id}:
    get:
      tags:
      - event-rest-controller
      operationId: getEvent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EventDTO"
    put:
      tags:
      - event-rest-controller
      operationId: replaceEvent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventDTO"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EventDTO"
    delete:
      tags:
      - event-rest-controller
      operationId: deleteEvent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EventDTO"
  /api/comments/{id}:
    get:
      tags:
      - comment-rest-controller
      operationId: getComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CommentDTO"
    put:
      tags:
      - comment-rest-controller
      operationId: replaceComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentDTO"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CommentDTO"
    delete:
      tags:
      - comment-rest-controller
      operationId: deleteComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CommentDTO"
  /api/clients/{id}:
    get:
      tags:
      - client-rest-controller
      operationId: getClient
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ClientDTO"
    put:
      tags:
      - client-rest-controller
      operationId: replaceClient
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientDTO"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ClientDTO"
    delete:
      tags:
      - client-rest-controller
      operationId: deleteClient
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ClientDTO"
  /api/tickets/:
    get:
      tags:
      - ticket-rest-controller
      operationId: getAllTickets_1
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelTicketDTO"
    post:
      tags:
      - ticket-rest-controller
      operationId: createTicket
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TicketDTO"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TicketDTO"
  /api/events/{id}/image:
    get:
      tags:
      - event-rest-controller
      operationId: getEventImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - event-rest-controller
      operationId: createEventImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
              required:
              - imageFile
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/events/:
    get:
      tags:
      - event-rest-controller
      operationId: getAllEvents
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelEventDTO"
    post:
      tags:
      - event-rest-controller
      operationId: createEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventDTO"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EventDTO"
  /api/comments/:
    get:
      tags:
      - comment-rest-controller
      operationId: getAllComments
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelCommentDTO"
    post:
      tags:
      - comment-rest-controller
      operationId: createComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentDTO"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CommentDTO"
  /api/clients/:
    get:
      tags:
      - client-rest-controller
      operationId: getAllClients
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelClientDTO"
    post:
      tags:
      - client-rest-controller
      operationId: createClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientDTO"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ClientDTO"
  /api/auth/refresh:
    post:
      tags:
      - login-controller
      operationId: refreshToken
      parameters:
      - name: RefreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/logout:
    post:
      tags:
      - login-controller
      operationId: logOut
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/login:
    post:
      tags:
      - login-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/events/festivals/:
    get:
      tags:
      - event-rest-controller
      operationId: getFestivals
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelEventDTO"
  /api/events/concerts/:
    get:
      tags:
      - event-rest-controller
      operationId: getConcerts
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelEventDTO"
  /api/events/clubbing/:
    get:
      tags:
      - event-rest-controller
      operationId: getClubs
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelEventDTO"
components:
  schemas:
    TicketDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        price:
          type: number
          format: float
        createdAt:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - OPEN
          - CLOSED
    EventDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        timeStart:
          type: string
          format: date-time
        timeFinish:
          type: string
          format: date-time
        address:
          type: string
        type:
          type: string
        price:
          type: integer
          format: int32
        image:
          type: string
    CommentDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        autor:
          type: string
        text:
          type: string
        rating:
          type: integer
          format: int32
        title:
          type: string
    ClientDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        roles:
          type: array
          items:
            type: string
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Pageable:
      type: object
      properties:
        page:
          type: integer
          format: int32
          minimum: 0
        size:
          type: integer
          format: int32
          minimum: 1
        sort:
          type: array
          items:
            type: string
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
    PagedModelTicketDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/TicketDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
    PagedModelEventDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/EventDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
    PagedModelCommentDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/CommentDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
    PagedModelClientDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/ClientDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
